// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForInsertLogs implements pgx.CopyFromSource.
type iteratorForInsertLogs struct {
	rows                 []*InsertLogsParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertLogs) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertLogs) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].ImageBuildID,
		r.rows[0].InstanceID,
		r.rows[0].Level,
		r.rows[0].Message,
		r.rows[0].LoggedAt,
	}, nil
}

func (r iteratorForInsertLogs) Err() error {
	return nil
}

func (q *Queries) InsertLogs(ctx context.Context, arg []*InsertLogsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"logs"}, []string{"id", "image_build_id", "instance_id", "level", "message", "logged_at"}, &iteratorForInsertLogs{rows: arg})
}
