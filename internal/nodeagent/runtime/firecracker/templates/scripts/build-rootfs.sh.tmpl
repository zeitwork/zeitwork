#!/bin/bash
set -euo pipefail

# Build Ubuntu rootfs using Firecracker's CI tools (recommended approach)
FIRECRACKER_SOURCE="{{.FirecrackerSourceDir}}"
OUTPUT_PATH="{{.OutputPath}}"
TEMP_DIR="{{.TempDir}}"

echo "Building Ubuntu rootfs using Firecracker's CI tools..."
echo "This process may take 5-10 minutes..."

cd "$TEMP_DIR"

# Clone Firecracker source if not exists (reuse if already cloned for kernel)
if [[ ! -d "$FIRECRACKER_SOURCE" ]]; then
    echo "Cloning Firecracker source..."
    git clone https://github.com/firecracker-microvm/firecracker.git "$FIRECRACKER_SOURCE"
    echo "Firecracker source cloned successfully"
else
    echo "Using existing Firecracker source directory"
fi

cd "$FIRECRACKER_SOURCE"

# Install additional dependencies for rootfs building
echo "Installing rootfs build dependencies..."
apt-get update -y
apt-get install -y \
    debootstrap \
    squashfs-tools \
    docker.io

# Make sure devtool is executable
chmod +x tools/devtool

echo "Building rootfs using devtool..."
echo "Command: ./tools/devtool build_ci_artifacts rootfs"

# Build the rootfs using Firecracker's tools with detailed output
# This creates an Ubuntu 22.04 rootfs with firecracker-containerd agent pre-installed
./tools/devtool build_ci_artifacts rootfs || {
    echo "ERROR: devtool rootfs build failed"
    echo "The Ubuntu rootfs must include firecracker-containerd-agent for container-in-VM to work"
    echo ""
    echo "Available Python versions:"
    which python3 || echo "python3 not found" 
    python3 --version || echo "python3 version check failed"
    exit 1
}

# Look for the built rootfs
ROOTFS_SOURCE_PATH="ubuntu-22.04.ext4"

echo "Looking for built rootfs at: $ROOTFS_SOURCE_PATH"
ls -la *.ext4 2>/dev/null || echo "No .ext4 files found in current directory"

if [[ ! -f "$ROOTFS_SOURCE_PATH" ]]; then
    echo "ERROR: Rootfs build completed but file not found: $ROOTFS_SOURCE_PATH"
    echo "Available files:"
    find . -name "*.ext4" -o -name "*rootfs*" -o -name "*ubuntu*" 2>/dev/null || echo "No rootfs files found"
    exit 1
fi

# Create target directory
mkdir -p "$(dirname "$OUTPUT_PATH")"

# Copy to target location
echo "Copying rootfs from: $ROOTFS_SOURCE_PATH"
echo "To target location: $OUTPUT_PATH"
cp "$ROOTFS_SOURCE_PATH" "$OUTPUT_PATH"
chmod 644 "$OUTPUT_PATH"

echo "Rootfs build completed successfully!"
echo "Rootfs location: $OUTPUT_PATH"
echo "Rootfs size: $(du -h "$OUTPUT_PATH" | cut -f1)"

# Verify the rootfs file
file "$OUTPUT_PATH"
