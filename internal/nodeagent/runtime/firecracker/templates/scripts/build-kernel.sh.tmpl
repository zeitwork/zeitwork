#!/bin/bash
set -euo pipefail

# Build Linux kernel using Firecracker's CI tools
FIRECRACKER_SOURCE="{{.FirecrackerSourceDir}}"
KERNEL_VERSION="{{.KernelVersion}}"
OUTPUT_PATH="{{.OutputPath}}"
TEMP_DIR="{{.TempDir}}"

echo "Building Linux kernel ${KERNEL_VERSION} for Firecracker..."
echo "This process may take 10-20 minutes depending on system specs..."

cd "$TEMP_DIR"

# Install additional dependencies needed for kernel building
echo "Installing kernel build dependencies..."
apt-get update -y
apt-get install -y \
    build-essential \
    bc \
    kmod \
    cpio \
    flex \
    libncurses5-dev \
    libelf-dev \
    libssl-dev \
    dwarves \
    python3 \
    python3-pip \
    rsync

# Clone Firecracker source if not exists
if [[ ! -d "$FIRECRACKER_SOURCE" ]]; then
    echo "Cloning Firecracker source repository..."
    git clone https://github.com/firecracker-microvm/firecracker.git "$FIRECRACKER_SOURCE"
    echo "Firecracker source cloned successfully"
else
    echo "Firecracker source already exists, updating..."
    cd "$FIRECRACKER_SOURCE"
    git pull
    cd "$TEMP_DIR"
fi

cd "$FIRECRACKER_SOURCE"

# Make sure devtool is executable
chmod +x tools/devtool

echo "Building kernel using Firecracker devtool..."
echo "Command: ./tools/devtool build_ci_artifacts kernels $KERNEL_VERSION"

# Build the kernel using Firecracker's tools with verbose output
echo "Starting kernel build (this takes 10-20 minutes)..."
if ./tools/devtool build_ci_artifacts kernels "$KERNEL_VERSION"; then
    echo "Kernel build completed successfully!"
else
    echo "WARNING: devtool returned non-zero exit code, but kernel may still have been built"
    echo "Checking if kernel files were created anyway..."
fi

# Get the architecture
ARCH=$(uname -m)

echo "Looking for built kernel in resources directory..."
ls -la resources/${ARCH}/ || echo "No kernel directory found"
ls -la resources/${ARCH}/debug/ || echo "No debug kernel directory found"

# Look for kernel files in multiple possible locations
KERNEL_SOURCE_PATH=""

# Check possible kernel locations (newer devtool puts kernels in debug/ with full version)
POSSIBLE_PATHS=(
    "resources/${ARCH}/debug/vmlinux-${KERNEL_VERSION}*"
    "resources/${ARCH}/vmlinux-${KERNEL_VERSION}*"
    "resources/${ARCH}/debug/vmlinux-*"
    "resources/${ARCH}/vmlinux-*"
)

for pattern in "${POSSIBLE_PATHS[@]}"; do
    echo "Checking pattern: $pattern"
    for file in $pattern; do
        if [[ -f "$file" ]]; then
            KERNEL_SOURCE_PATH="$file"
            echo "Found kernel: $KERNEL_SOURCE_PATH"
            break 2
        fi
    done
done

if [[ -z "$KERNEL_SOURCE_PATH" ]]; then
    echo "ERROR: Kernel build completed but no vmlinux file found"
    echo "Available files in resources directory:"
    find resources/ -name "*vmlinux*" -o -name "*kernel*" 2>/dev/null || echo "No kernel files found"
    echo ""
    echo "Full directory structure:"
    find resources/ -type f 2>/dev/null || echo "No files found in resources"
    exit 1
fi

# Create target directory
mkdir -p "$(dirname "$OUTPUT_PATH")"

# Copy to target location
echo "Copying kernel from: $KERNEL_SOURCE_PATH"
echo "To target location: $OUTPUT_PATH"
cp "$KERNEL_SOURCE_PATH" "$OUTPUT_PATH"
chmod 644 "$OUTPUT_PATH"

echo "Kernel build completed successfully!"
echo "Kernel location: $OUTPUT_PATH"
echo "Kernel size: $(du -h "$OUTPUT_PATH" | cut -f1)"

# Verify the kernel file
file "$OUTPUT_PATH"
